# Generated by Django 5.2.4 on 2025-07-07 06:24

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('businesses', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Bookmark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True, help_text='Personal notes about this business')),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookmarks', to='businesses.business')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookmarks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Bookmark',
                'verbose_name_plural': 'Bookmarks',
                'ordering': ['-created_at'],
                'unique_together': {('user', 'business')},
            },
        ),
        migrations.CreateModel(
            name='BookmarkCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('is_public', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookmark_collections', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Bookmark Collection',
                'verbose_name_plural': 'Bookmark Collections',
                'ordering': ['name'],
                'unique_together': {('user', 'name')},
            },
        ),
        migrations.CreateModel(
            name='BusinessComparison',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('businesses', models.ManyToManyField(related_name='comparisons', to='businesses.business')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comparisons', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Business Comparison',
                'verbose_name_plural': 'Business Comparisons',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Shortlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shortlists', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Shortlist',
                'verbose_name_plural': 'Shortlists',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ShortlistItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('priority', models.PositiveIntegerField(default=1, help_text='1=High, 2=Medium, 3=Low')),
                ('notes', models.TextField(blank=True)),
                ('contacted', models.BooleanField(default=False)),
                ('contacted_at', models.DateTimeField(blank=True, null=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='businesses.business')),
                ('shortlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookmarks.shortlist')),
            ],
            options={
                'verbose_name': 'Shortlist Item',
                'verbose_name_plural': 'Shortlist Items',
                'ordering': ['priority', '-created_at'],
                'unique_together': {('shortlist', 'business')},
            },
        ),
        migrations.AddField(
            model_name='shortlist',
            name='businesses',
            field=models.ManyToManyField(through='bookmarks.ShortlistItem', to='businesses.business'),
        ),
        migrations.CreateModel(
            name='BookmarkCollectionItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sort_order', models.PositiveIntegerField(default=0)),
                ('bookmark', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookmarks.bookmark')),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookmarks', to='bookmarks.bookmarkcollection')),
            ],
            options={
                'verbose_name': 'Bookmark Collection Item',
                'verbose_name_plural': 'Bookmark Collection Items',
                'ordering': ['sort_order'],
                'unique_together': {('collection', 'bookmark')},
            },
        ),
    ]

# Generated by Django 4.2.7 on 2025-01-07 14:00

import django.core.validators
import django.db.models.deletion
import phonenumber_field.modelfields
import taggit.managers
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('businesses', '0002_enhance_business_model'),
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('crm', '0001_initial'),
    ]

    operations = [
        # Drop existing models that will be recreated
        migrations.DeleteModel(name='CRMContact'),
        migrations.DeleteModel(name='CRMDeal'),
        migrations.DeleteModel(name='CRMActivity'),
        migrations.DeleteModel(name='CRMTask'),
        migrations.DeleteModel(name='CRMNote'),
        
        # Create CRMSettings
        migrations.CreateModel(
            name='CRMSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('auto_convert_leads', models.BooleanField(default=False, help_text='Automatically convert qualified leads to contacts')),
                ('lead_score_threshold', models.PositiveIntegerField(default=75, help_text='Lead score threshold for auto-conversion')),
                ('auto_update_last_contacted', models.BooleanField(default=True, help_text='Auto-update last contacted date on activities')),
                ('notify_on_lead_assignment', models.BooleanField(default=True)),
                ('notify_on_deal_stage_change', models.BooleanField(default=True)),
                ('notify_on_task_overdue', models.BooleanField(default=True)),
                ('archive_old_leads_days', models.PositiveIntegerField(default=365, help_text='Archive leads older than X days')),
                ('delete_old_activities_days', models.PositiveIntegerField(default=730, help_text='Delete activities older than X days')),
                ('default_lead_source', models.CharField(default='website', max_length=50)),
                ('default_deal_probability', models.PositiveIntegerField(default=10, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
            ],
            options={
                'verbose_name': 'CRM Settings',
                'verbose_name_plural': 'CRM Settings',
            },
        ),
        
        # Create Lead model
        migrations.CreateModel(
            name='Lead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(blank=True, max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('company', models.CharField(blank=True, max_length=200)),
                ('designation', models.CharField(blank=True, max_length=100)),
                ('status', models.CharField(choices=[('new', 'New'), ('contacted', 'Contacted'), ('qualified', 'Qualified'), ('unqualified', 'Unqualified'), ('converted', 'Converted'), ('lost', 'Lost')], default='new', max_length=20)),
                ('lead_source', models.CharField(choices=[('website', 'Website'), ('referral', 'Referral'), ('social_media', 'Social Media'), ('advertisement', 'Advertisement'), ('cold_call', 'Cold Call'), ('email_campaign', 'Email Campaign'), ('trade_show', 'Trade Show'), ('partner', 'Partner'), ('organic_search', 'Organic Search'), ('paid_search', 'Paid Search'), ('other', 'Other')], default='website', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('lead_score', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('qualification_notes', models.TextField(blank=True)),
                ('campaign_name', models.CharField(blank=True, max_length=200)),
                ('utm_source', models.CharField(blank=True, max_length=100)),
                ('utm_medium', models.CharField(blank=True, max_length=100)),
                ('utm_campaign', models.CharField(blank=True, max_length=100)),
                ('website', models.URLField(blank=True)),
                ('address', models.TextField(blank=True)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('state', models.CharField(blank=True, max_length=100)),
                ('country', models.CharField(default='India', max_length=100)),
                ('last_contacted', models.DateTimeField(blank=True, null=True)),
                ('next_follow_up', models.DateTimeField(blank=True, null=True)),
                ('converted_at', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_leads', to=settings.AUTH_USER_MODEL)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crm_leads', to='businesses.business')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owned_leads', to=settings.AUTH_USER_MODEL)),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'verbose_name': 'Lead',
                'verbose_name_plural': 'Leads',
                'ordering': ['-created_at'],
            },
        ),
        
        # Create enhanced CRMContact
        migrations.CreateModel(
            name='CRMContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(blank=True, max_length=100)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('company', models.CharField(blank=True, max_length=200)),
                ('designation', models.CharField(blank=True, max_length=100)),
                ('contact_type', models.CharField(choices=[('lead', 'Lead'), ('customer', 'Customer'), ('prospect', 'Prospect'), ('partner', 'Partner'), ('vendor', 'Vendor')], default='lead', max_length=20)),
                ('lead_source', models.CharField(blank=True, choices=[('website', 'Website'), ('referral', 'Referral'), ('social_media', 'Social Media'), ('advertisement', 'Advertisement'), ('cold_call', 'Cold Call'), ('email_campaign', 'Email Campaign'), ('trade_show', 'Trade Show'), ('other', 'Other')], max_length=20)),
                ('address_line_1', models.CharField(blank=True, max_length=255)),
                ('address_line_2', models.CharField(blank=True, max_length=255)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('state', models.CharField(blank=True, max_length=100)),
                ('pincode', models.CharField(blank=True, max_length=10)),
                ('country', models.CharField(default='India', max_length=100)),
                ('last_contacted', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crm_contacts', to='businesses.business')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owned_contacts', to=settings.AUTH_USER_MODEL)),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'verbose_name': 'CRM Contact',
                'verbose_name_plural': 'CRM Contacts',
                'ordering': ['-created_at'],
            },
        ),
        
        # Add converted_to_contact field to Lead
        migrations.AddField(
            model_name='lead',
            name='converted_to_contact',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='converted_from_lead', to='crm.crmcontact'),
        ),
        
        # Create enhanced CRMDeal
        migrations.CreateModel(
            name='CRMDeal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('value', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('currency', models.CharField(default='INR', max_length=3)),
                ('stage', models.CharField(choices=[('prospecting', 'Prospecting'), ('qualification', 'Qualification'), ('needs_analysis', 'Needs Analysis'), ('proposal', 'Proposal'), ('negotiation', 'Negotiation'), ('closed_won', 'Closed Won'), ('closed_lost', 'Closed Lost')], default='prospecting', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('probability', models.PositiveIntegerField(default=0, help_text='Probability of closing (0-100%)')),
                ('expected_close_date', models.DateField(blank=True, null=True)),
                ('actual_close_date', models.DateField(blank=True, null=True)),
                ('last_contacted', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('competitors', models.TextField(blank=True, help_text='Competing companies or solutions')),
                ('lead_source', models.CharField(blank=True, max_length=100)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crm_deals', to='businesses.business')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_deals', to=settings.AUTH_USER_MODEL)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deals', to='crm.crmcontact')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owned_deals', to=settings.AUTH_USER_MODEL)),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'verbose_name': 'CRM Deal',
                'verbose_name_plural': 'CRM Deals',
                'ordering': ['-created_at'],
            },
        ),
        
        # Add converted_to_deal field to Lead
        migrations.AddField(
            model_name='lead',
            name='converted_to_deal',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='converted_from_lead', to='crm.crmdeal'),
        ),
        
        # Create DealProduct
        migrations.CreateModel(
            name='DealProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('deal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deal_products', to='crm.crmdeal')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='businesses.businessproduct')),
            ],
            options={
                'verbose_name': 'Deal Product',
                'verbose_name_plural': 'Deal Products',
                'unique_together': {('deal', 'product')},
            },
        ),
        
        # Create enhanced CRMActivity
        migrations.CreateModel(
            name='CRMActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('activity_type', models.CharField(choices=[('call', 'Phone Call'), ('email', 'Email'), ('meeting', 'Meeting'), ('task', 'Task'), ('note', 'Note'), ('sms', 'SMS'), ('demo', 'Product Demo'), ('proposal', 'Proposal Sent'), ('follow_up', 'Follow Up'), ('other', 'Other')], max_length=20)),
                ('subject', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('planned', 'Planned'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('overdue', 'Overdue')], default='planned', max_length=20)),
                ('activity_date', models.DateField(blank=True, null=True)),
                ('scheduled_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('duration_minutes', models.PositiveIntegerField(blank=True, null=True)),
                ('outcome', models.TextField(blank=True, help_text='Result or outcome of the activity')),
                ('follow_up_required', models.BooleanField(default=False)),
                ('next_follow_up_date', models.DateTimeField(blank=True, null=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crm_activities', to='businesses.business')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_activities', to=settings.AUTH_USER_MODEL)),
                ('contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='crm.crmcontact')),
                ('deal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='crm.crmdeal')),
                ('lead', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='crm.lead')),
            ],
            options={
                'verbose_name': 'CRM Activity',
                'verbose_name_plural': 'CRM Activities',
                'ordering': ['-scheduled_at', '-created_at'],
            },
        ),
        
        # Create enhanced CRMTask
        migrations.CreateModel(
            name='CRMTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('task_type', models.CharField(choices=[('follow_up', 'Follow Up'), ('call', 'Make Call'), ('email', 'Send Email'), ('meeting', 'Schedule Meeting'), ('proposal', 'Prepare Proposal'), ('research', 'Research'), ('admin', 'Administrative'), ('other', 'Other')], default='other', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('on_hold', 'On Hold')], default='pending', max_length=20)),
                ('due_date', models.DateTimeField()),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('estimated_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('actual_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('reminder_sent', models.BooleanField(default=False)),
                ('reminder_date', models.DateTimeField(blank=True, null=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crm_tasks', to='businesses.business')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_tasks', to=settings.AUTH_USER_MODEL)),
                ('contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='crm.crmcontact')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_tasks', to=settings.AUTH_USER_MODEL)),
                ('deal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='crm.crmdeal')),
                ('depends_on', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dependent_tasks', to='crm.crmtask')),
                ('lead', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='crm.lead')),
            ],
            options={
                'verbose_name': 'CRM Task',
                'verbose_name_plural': 'CRM Tasks',
                'ordering': ['due_date', '-created_at'],
            },
        ),
        
        # Create enhanced CRMNote
        migrations.CreateModel(
            name='CRMNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(blank=True, max_length=200)),
                ('content', models.TextField()),
                ('note_type', models.CharField(choices=[('general', 'General Note'), ('call_log', 'Call Log'), ('meeting_minutes', 'Meeting Minutes'), ('follow_up', 'Follow Up Note'), ('internal', 'Internal Note'), ('customer_feedback', 'Customer Feedback')], default='general', max_length=20)),
                ('is_private', models.BooleanField(default=False)),
                ('is_pinned', models.BooleanField(default=False)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='crm/notes/')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crm_notes', to='businesses.business')),
                ('contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='crm_notes', to='crm.crmcontact')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crm_notes', to=settings.AUTH_USER_MODEL)),
                ('deal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='crm_notes', to='crm.crmdeal')),
                ('lead', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='crm_notes', to='crm.lead')),
            ],
            options={
                'verbose_name': 'CRM Note',
                'verbose_name_plural': 'CRM Notes',
                'ordering': ['-is_pinned', '-created_at'],
            },
        ),
        
        # Create CRMPipeline
        migrations.CreateModel(
            name='CRMPipeline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('is_default', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crm_pipelines', to='businesses.business')),
            ],
            options={
                'verbose_name': 'CRM Pipeline',
                'verbose_name_plural': 'CRM Pipelines',
                'ordering': ['name'],
            },
        ),
        
        # Create CRMPipelineStage
        migrations.CreateModel(
            name='CRMPipelineStage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('probability', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('sort_order', models.PositiveIntegerField(default=0)),
                ('is_closed_stage', models.BooleanField(default=False)),
                ('is_won_stage', models.BooleanField(default=False)),
                ('pipeline', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stages', to='crm.crmpipeline')),
            ],
            options={
                'verbose_name': 'CRM Pipeline Stage',
                'verbose_name_plural': 'CRM Pipeline Stages',
                'ordering': ['sort_order'],
                'unique_together': {('pipeline', 'name')},
            },
        ),
        
        # Create CRMReport
        migrations.CreateModel(
            name='CRMReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('report_type', models.CharField(choices=[('leads', 'Leads Report'), ('deals', 'Deals Report'), ('activities', 'Activities Report'), ('performance', 'Performance Report'), ('pipeline', 'Pipeline Report'), ('forecast', 'Sales Forecast')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('filters', models.JSONField(blank=True, default=dict)),
                ('date_range_start', models.DateField(blank=True, null=True)),
                ('date_range_end', models.DateField(blank=True, null=True)),
                ('data', models.JSONField(blank=True, default=dict)),
                ('generated_at', models.DateTimeField(blank=True, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crm_reports', to='businesses.business')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crm_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'CRM Report',
                'verbose_name_plural': 'CRM Reports',
                'ordering': ['-created_at'],
            },
        ),
        
        # Add indexes
        migrations.AddIndex(
            model_name='lead',
            index=models.Index(fields=['business', 'status'], name='crm_lead_business_status_idx'),
        ),
        migrations.AddIndex(
            model_name='lead',
            index=models.Index(fields=['lead_source'], name='crm_lead_source_idx'),
        ),
        migrations.AddIndex(
            model_name='lead',
            index=models.Index(fields=['assigned_to'], name='crm_lead_assigned_idx'),
        ),
        migrations.AddIndex(
            model_name='lead',
            index=models.Index(fields=['lead_score'], name='crm_lead_score_idx'),
        ),
        migrations.AddIndex(
            model_name='crmcontact',
            index=models.Index(fields=['account', 'contact_type'], name='crm_contact_account_type_idx'),
        ),
        migrations.AddIndex(
            model_name='crmcontact',
            index=models.Index(fields=['owner'], name='crm_contact_owner_idx'),
        ),
        migrations.AddIndex(
            model_name='crmdeal',
            index=models.Index(fields=['account', 'stage'], name='crm_deal_account_stage_idx'),
        ),
        migrations.AddIndex(
            model_name='crmdeal',
            index=models.Index(fields=['assigned_to'], name='crm_deal_assigned_idx'),
        ),
        migrations.AddIndex(
            model_name='crmdeal',
            index=models.Index(fields=['expected_close_date'], name='crm_deal_close_date_idx'),
        ),
        migrations.AddIndex(
            model_name='crmactivity',
            index=models.Index(fields=['account', 'activity_type'], name='crm_activity_account_type_idx'),
        ),
        migrations.AddIndex(
            model_name='crmactivity',
            index=models.Index(fields=['assigned_to', 'status'], name='crm_activity_assigned_status_idx'),
        ),
        migrations.AddIndex(
            model_name='crmactivity',
            index=models.Index(fields=['scheduled_at'], name='crm_activity_scheduled_idx'),
        ),
        migrations.AddIndex(
            model_name='crmtask',
            index=models.Index(fields=['account', 'status'], name='crm_task_account_status_idx'),
        ),
        migrations.AddIndex(
            model_name='crmtask',
            index=models.Index(fields=['assigned_to', 'due_date'], name='crm_task_assigned_due_idx'),
        ),
        migrations.AddIndex(
            model_name='crmtask',
            index=models.Index(fields=['priority'], name='crm_task_priority_idx'),
        ),
        migrations.AddIndex(
            model_name='crmnote',
            index=models.Index(fields=['account', 'note_type'], name='crm_note_account_type_idx'),
        ),
        migrations.AddIndex(
            model_name='crmnote',
            index=models.Index(fields=['created_by'], name='crm_note_created_by_idx'),
        ),
    ]